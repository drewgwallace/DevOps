---
# Purpose: This playbook will create an ansible user and group,
# then configure the ansible server for passwordless ssh logins
# Last Updated: 2018.07.11
# Notes:


  # host provided in Ansible's 'scripts' directory or passed from terminal
  - hosts: "{{ lookup('ini', 'hosts section=ansible_vars file=vars/add_ansible_user.ini') }}"
    remote_user: "{{ lookup('ini', 'target_user section=ansible_vars file=vars/add_ansible_user.ini') }}"
    # Fact checking performed later
    gather_facts: false
           
    vars_prompt:

      # Prompt for target username's password
      - name: "ansible_ssh_pass"
        prompt: "Password for the target machine SSH/SUDO"
        private: yes
      # Prompt for password to be hashed and used for Ansible's user creation
      - name: "ansible_user_pass"
        prompt: "Password for Ansible user to be created"
        encrypt: "sha512_crypt"
        private: yes

    tasks:
       
       # This sets the target username's password to be used as the become password
       - name: Set ansible username and password facts
         set_fact:
           ansible_become_pass: "{{ ansible_ssh_pass }}"
           
       - name: Set ansible user to create
         set_fact:
           user_to_create: "{{ lookup('ini', 'user_to_create section=ansible_vars file=vars/add_ansible_user.ini') }}"

       - name: Ensure Ansible dependencies installed
         raw: apt-get update && apt-get install -y python python-simplejson
         become: true
       
       # Fact checking performed AFTER python modules installed
       - name: Gather facts
         setup: 

       - name: Add Ansible group if not present
         # Group assignment to ansible user performed when ansible user created
         group:
            name: "{{ user_to_create }}"
            state: present
         become: true

       - name: Add Ansible user if not present
         user:
            name: "{{ user_to_create }}"
            comment: "Ansible User"
            group: "{{ user_to_create }}"
            groups: sudo
            update_password: always
            password: "{{ ansible_user_pass }}"
            createhome: true
            skeleton: /etc/skel
            shell: /bin/bash
            generate_ssh_key: yes
         become: true

       - name: Check that the .ssh/authorized_keys exists
         stat:
           path: "{{ ansible_env.HOME }}/.ssh/authorized_keys"
         register: result

       - name: Add authorized_keys file if not present
         file:
           state: touch
           owner: "{{ user_to_create }}"
           group: "{{ user_to_create }}"
           mode: 0644
           path: /home/"{{ user_to_create }}"/.ssh/authorized_keys
         become: true
         when: not result.stat.exists|bool

       - name: Add ansible authorized_key line item if not present
         lineinfile:
           path: /home/"{{ user_to_create }}"/.ssh/authorized_keys
           state: present
           # regexp: 'ansible@ansible'
           insertafter: EOF
           line: "{{ lookup('file', path_to_ssh_pub_key) }}"
         become: true
