---
# Purpose: This playbook will create an ansible user and group,
# then configure the ansible server for passwordless ssh logins
# Last Updated: 2018.09.02
# Notes:


  # host provided in Ansible's 'scripts' directory or passed from terminal
  - hosts: "all"
    # Fact checking performed later
    gather_facts: false
    become_method: sudo
           

    tasks:
       
       - name: Ensure Ansible dependencies installed
         raw: apt-get update && apt-get install -y python python-simplejson
         become: true
       
       # Fact checking performed AFTER python modules installed
       - name: Gather facts
         setup: 

       - name: Add Ansible group if not present
         # Group assignment to ansible user performed when ansible user created
         group:
            name: "{{ user_to_create }}"
            state: present
         become: true

       - name: Add Ansible user if not present
         user:
            name: "{{ user_to_create }}"
            comment: "Ansible User"
            group: "{{ user_to_create }}"
            groups: sudo
            update_password: always
            # dependency required for password if needed (pip install passlib)
            # password: "{{ 'ansible_user_pass'|password_hash('sha512', 65534|random(seed=inventory_hostname)|string) }}"
            createhome: true
            skeleton: /etc/skel
            shell: /bin/bash
            generate_ssh_key: yes
         become: true

       - name: Check that the .ssh/authorized_keys exists
         stat:
           path: "{{ ansible_env.HOME }}/.ssh/authorized_keys"
         register: result

       - name: Add authorized_keys file if not present
         file:
           state: touch
           owner: "{{ user_to_create }}"
           group: "{{ user_to_create }}"
           mode: 0644
           path: "/home/{{ user_to_create }}/.ssh/authorized_keys"
         become: true
         when: not result.stat.exists|bool

       - name: Add ansible authorized_key line item if not present
         lineinfile:
           path: "/home/{{ user_to_create }}/.ssh/authorized_keys"
           state: present
           insertafter: EOF
           line: "{{ lookup('file', path_to_ssh_pub_key) }}"
         become: true
